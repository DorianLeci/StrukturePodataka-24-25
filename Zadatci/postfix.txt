13 5 4 3 4 3 * + * - 2 3 * + +

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_LEN 255
#define ERROR_OPENING_FILE -1

struct _article;
typedef struct _article* ArticlePosition;

typedef struct _article {
	char name[MAX_LEN];
	int quant;
	double price;
	ArticlePosition next;
}article;

struct _racun;
typedef struct _racun* RacunPosition;

typedef struct _racun {
	char datum[MAX_LEN];

	RacunPosition next;
	ArticlePosition head;

}racun;

int ucitaj_racuni(RacunPosition head, char* filename);
int otvori_zasebni_racun(RacunPosition head, char* filename);

int main() {
	RacunPosition head_glavni = (RacunPosition)malloc(sizeof(racun));
	if (!head_glavni)return -1;

	head_glavni->next = NULL;

}
int ucitaj_racuni(RacunPosition head, char* filename) {
	char buffer[MAX_LEN];
	FILE* fp = fopen(filename, "r");
	if (!fp)return ERROR_OPENING_FILE;

	while (!feof(fp)) {
		fgets(buffer, MAX_LEN, fp);
		otvori_zasebni_racun(head, buffer);
	}
}

int otvori_zasebni_racun(RacunPosition head, char* filename) {
	FILE* fp = fopen(filename, "r");
	char buffer[MAX_LEN];
	char name_temp[MAX_LEN];
	int quant_temp;
	double price_temp;
	ArticlePosition new;


	while (!feof(fp)) {
		new= (ArticlePosition)malloc(sizeof(article));
		if (!new)return -1;
		fgets(buffer, MAX_LEN, fp);
		sscanf(buffer, "%s %d %lf", name_temp, &quant_temp, &price_temp);
		strcpy(new->name, name_temp);
		new->price = price_temp;
		new->quant = quant_temp;
	}
}
